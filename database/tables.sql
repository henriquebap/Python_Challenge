CREATE TABLE BIKETYPES_CH (
    BIKE_TYPE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    NAME VARCHAR2(50) NOT NULL,
    DESCRIPTION CLOB
);

CREATE SEQUENCE BIKE_TYPE_ID_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE USERS_BIKE (
    USER_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    FIRST_NAME VARCHAR2(50) NOT NULL,
    LAST_NAME VARCHAR2(50) NOT NULL,
    CPF VARCHAR2(14) UNIQUE NOT NULL,
    EMAIL VARCHAR2(100) UNIQUE NOT NULL,
    PASSWORD VARCHAR2(100) NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP
);

-- Create a trigger to update the UPDATED_AT column
CREATE OR REPLACE TRIGGER USERS_BIKE_UPDATED_AT_TRG BEFORE
    INSERT OR UPDATE ON USERS_BIKE FOR EACH ROW
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
END;
/

CREATE SEQUENCE USER_ID_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE BIKES_CH (
    BIKE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    USER_ID NUMBER,
    BIKE_TYPE_ID NUMBER,
    BRAND VARCHAR2(50) NOT NULL,
    SERIAL_NUMBER VARCHAR2(50) NOT NULL,
    YEAR NUMBER NOT NULL,
    VALUE NUMBER NOT NULL,
    ADDITIONAL_MODIFICATIONS CLOB,
    FOREIGN KEY (USER_ID) REFERENCES USERS_BIKE(USER_ID),
    FOREIGN KEY (BIKE_TYPE_ID) REFERENCES BIKETYPES_CH(BIKE_TYPE_ID)
);

CREATE SEQUENCE BIKE_ID_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE API_RESULTS (
    ID NUMBER PRIMARY KEY,
    IMAGE_PATH VARCHAR2(255) NOT NULL,
    PREDICTION_IMAGE_PATH VARCHAR2(255) NOT NULL,
    PREDICTED_CLASS VARCHAR2(50),
    CONFIDENCE NUMBER,
    ADDITIONAL_INFO CLOB,
    BIKE_ID NUMBER,
    CONSTRAINT FK_API_RESULTS_BIKE FOREIGN KEY (BIKE_ID) REFERENCES BIKES_CH(BIKE_ID)
);